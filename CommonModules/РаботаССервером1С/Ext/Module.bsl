Функция ПодключитьсяКБазе(Настройка)  Экспорт
	
	СтрокаКоннекта = "Srvr="+Настройка.Сервер1С+";Ref="+Настройка.База1С+";";
	Если ЗначениеЗаполнено(Настройка.Пользователь1С) Тогда
		СтрокаКоннекта = СтрокаКоннекта + "Usr="""+Настройка.Пользователь1С+""";";
	КонецЕсли;
	Если ЗначениеЗаполнено(Настройка.Пароль1С) Тогда
		СтрокаКоннекта = СтрокаКоннекта + "Pwd="""+Настройка.Пароль1С+""";";
	КонецЕсли;
	
	ИспользуемаяВерсия = "";
	Ошибка = "";
	ТекущееСоединение = Неопределено;
	
	Если Настройка.ВерсияПлатформы = Перечисления.ВерсияПлатформы.v83 Тогда
		
		Попытка
			Соединение=Новый COMОбъект("V83.ComConnector");
			ТекущееСоединение=Соединение.Connect(СтрокаКоннекта);
			ИспользуемаяВерсия = "83";
			Ошибка="";
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		
	ИначеЕсли Настройка.ВерсияПлатформы = Перечисления.ВерсияПлатформы.v82 Тогда

		Попытка
			Соединение=Новый COMОбъект("V82.ComConnector");
			ТекущееСоединение=Соединение.Connect(СтрокаКоннекта);
			ИспользуемаяВерсия = "82";
			Ошибка="";
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		
	ИначеЕсли Настройка.ВерсияПлатформы = Перечисления.ВерсияПлатформы.v81 Тогда
		
		Попытка
			Соединение=Новый COMОбъект("V81.ComConnector");
			ТекущееСоединение=Соединение.Connect(СтрокаКоннекта);
			ИспользуемаяВерсия = "81";
			Ошибка="";
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		
	КонецЕсли;
		
	//Попытка
	//	Соединение=Новый COMОбъект("V83.ComConnector");
	//	ТекущееСоединение=Соединение.Connect(СтрокаКоннекта);
	//	ИспользуемаяВерсия = "83";
	//	Ошибка="";
	//Исключение
	//	Ошибка = ОписаниеОшибки();
	//КонецПопытки;
	//
	//Если ИспользуемаяВерсия = "" Тогда
	//	Попытка
	//		Соединение=Новый COMОбъект("V81.ComConnector");
	//		ТекущееСоединение=Соединение.Connect(СтрокаКоннекта);
	//		ИспользуемаяВерсия = "81";
	//		Ошибка="";
	//	Исключение
	//		Ошибка = ОписаниеОшибки();
	//	КонецПопытки;
	//КонецЕсли;
	//
	//Если ИспользуемаяВерсия = "" Тогда
	//	Попытка
	//		Соединение=Новый COMОбъект("V82.ComConnector");
	//		ТекущееСоединение=Соединение.Connect(СтрокаКоннекта);
	//		ИспользуемаяВерсия = "82";
	//		Ошибка="";
	//	Исключение
	//		Ошибка = ОписаниеОшибки();
	//	КонецПопытки;
	//КонецЕсли;
	
	Возврат Новый Структура("Версия, Соединение, Ошибка", ИспользуемаяВерсия, ТекущееСоединение, Ошибка);

КонецФункции

Функция ПолучитьПараметрыЖурналаРегистрации(Настройка) Экспорт
	
	Стр = Настройка.Сервер1С;
	
	Кластер = 1541;
	Если Найти(Стр,":")>0 Тогда
		Попытка
			Кластер = Число(Сред(Стр,Найти(Стр,":")+1));
		Исключение
			Возврат Неопределено;
		КонецПопытки;
	КонецЕсли;

	ИмяБазы = нрег(Настройка.База1С);
	
	Если ЗначениеЗаполнено(Настройка.КаталогСервера1С) Тогда
		КаталогСервера = Настройка.КаталогСервера1С;
	Иначе
		КаталогСервера = КаталогПрограммы();
		КаталогСервера = Лев(КаталогСервера, Найти(КаталогСервера,"8.")-1);
	КонецЕсли;

	КаталогСервера = СтрЗаменить(КаталогСервера,"/","\");
	Если Прав(КаталогСервера,1) <> "\" Тогда
		КаталогСервера = КаталогСервера + "\";
	КонецЕсли; 
	
	Если Найти(КаталогСервера,"srvinfo")=0 Тогда
		КаталогСервера = КаталогСервера + "srvinfo\";
	КонецЕсли; 
	
	Папка = КаталогСервера + "reg_"+Формат(Кластер,"ЧГ=0");
	
	Если Настройка.ВерсияПлатформы = Перечисления.ВерсияПлатформы.v83 Тогда
		ИмяФайла = Папка+"\1CV8Clst.lst";
	Иначе
		ИмяФайла = Папка+"\1CV8Reg.lst";
	КонецЕсли;

	ИДБазы = "";
	
	Попытка
		Текст = Новый ЧтениеТекста(ИмяФайла,,,,Ложь);
	Исключение
	    Возврат Неопределено;
	КонецПопытки;
	
	Стр = Текст.ПрочитатьСтроку();
	Пока Стр <> Неопределено Цикл
		Стр = нрег(Стр);
		Если Найти(Стр,""""+ИмяБазы+"""")>0 Тогда
			Стр = Сред(Стр,2);
			Стр = Лев(Стр,Найти(Стр,",")-1);
			ИДБазы = Стр;
		КонецЕсли;
		Стр = Текст.ПрочитатьСтроку();
	КонецЦикла;

	Если ИмяБазы = "" Или ИДБазы = "" Тогда
		возврат Неопределено;
	КонецЕсли;
	    
	КаталогЛогов = Папка + "\" + ИДБазы + "\1Cv8Log\";
	
	
	мФайлы = НайтиФайлы(КаталогЛогов,"*.lgp",Ложь);
	
	Если мФайлы.Количество() = 0 Тогда
		Возврат Неопределено
	ИначеЕсли мФайлы.Количество() = 1 Тогда
		мРазделениеВключено = Ложь;
		Попытка
			мДата = Дата(Лев(мФайлы[0].Имя,4),Сред(мФайлы[0].Имя,5,2),Сред(мФайлы[0].Имя,7,2));
		Исключение
			возврат Неопределено;
		КонецПопытки;
		мРазмер = Цел(мФайлы[0].Размер()/1024/1024);
		
		Возврат Новый Структура("Разделен,ДатаНачала,РазмерФайла", мРазделениеВключено, мДата, мРазмер);
	Иначе
		мРазделениеВключено = Истина;
		мДата = Дата(1,1,1);
		мРазмер = 0;
		
		Файлы = Новый ТаблицаЗначений;
		Файлы.Колонки.Добавить("ДатаНачала");
		Файлы.Колонки.Добавить("РазмерФайла");
		Для каждого Файл ИЗ мФайлы Цикл
			Попытка
				мтДата = Дата(Лев(Файл.Имя,4),Сред(Файл.Имя,5,2),Сред(Файл.Имя,7,2));
			Исключение
			    Продолжить;
			КонецПопытки;
			
			Если Не ЗначениеЗаполнено(мтДата) Тогда
				Продолжить;
			КонецЕсли; 
			
			НовСтрока = Файлы.Добавить();
			НовСтрока.ДатаНачала = мтДата;
			НовСтрока.РазмерФайла = Цел(Файл.Размер()/1024/1024);
			
			мРазмер = мРазмер + Файл.Размер();;
			
		КонецЦикла;
		
		Файлы.Сортировать("ДатаНачала УБЫВ");
		
		мСтрокиКУдаления = Новый Массив;
		Сч = 1;
		Для каждого Строка Из Файлы Цикл
			Если Сч > 3 Тогда
				мСтрокиКУдаления.Добавить(Строка);
			КонецЕсли; 
			Сч = Сч + 1;
		КонецЦикла; 
		
		Для каждого Строка Из мСтрокиКУдаления Цикл
			Файлы.Удалить(Строка);
		КонецЦикла; 
		
		мРазмер = Цел(мРазмер/1024/1024);
		
		Возврат Новый Структура("Разделен,РазмерФайла,Файлы", мРазделениеВключено, мРазмер, Файлы);
	КонецЕсли; 

	
КонецФункции
 