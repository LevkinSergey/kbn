
&НаКлиенте
Процедура Включить(Команда)
	ВключитьТЖ();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВключитьТЖ()
	ТехнологическийЖурнал.ВключитьТехнологическийЖурнал();
КонецПроцедуры

&НаКлиенте
Процедура Обработать(Команда)
	
	ПодключитьОбработчикОжидания("ОтобразитьИндикатор",1);
	
	ОбработатьнаСервере();
	

	//ОтключитьОбработчикОжидания("ОтобразитьИндикатор");

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбработатьнаСервере()
	
	
	Если ИнформационнаяБазаФайловая() Тогда
		ТехнологическийЖурнал.ОбработатьФайлыТехнологическогоЖурнала();
	Иначе
		ФоновыеЗадания.Выполнить("ТехнологическийЖурнал.ОбработатьФайлыТехнологическогоЖурнала",,"ОбработкаЛоговТЖ","Обработка файлов логов ТЖ");
	КонецЕсли;
	


КонецПроцедуры



 &НаСервереБезКонтекста
Функция ИнформационнаяБазаФайловая()
			
	
	СтрокаСоединенияИнформационнойБазы =  СтрокаСоединенияИнформационнойБазы();
	
	Возврат Найти(Врег(СтрокаСоединенияИнформационнойБазы), "FILE=") = 1;
	
КонецФункции 


&НаКлиенте
Процедура ОтобразитьИндикатор()
	
	Структура  =  ПолучитьСтруктуруИндикатора();
	
	Индикатор = Структура.Индикатор;
    Элементы.Надпись.Заголовок = Структура.ТекстИндикатора;
	
	Если Структура.ЗавершитьОбработку Тогда
		
		ОтключитьОбработчикОжидания("ОтобразитьИндикатор");
	КонецЕсли;	
 
		
КонецПроцедуры
  

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруИндикатора()
	
	ТекстИндикатора = "Обработка данных начата";
	ЗавершитьОбработку = Ложь;
	Индикатор = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сервис", Перечисления.Сервисы.QueryTJ);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеИндикатораОбработки.НомерПотока КАК НомерПотока,
	|	ДанныеИндикатораОбработки.ВсегоФайлов КАК ВсегоФайлов,
	|	ДанныеИндикатораОбработки.НомерТекущегоФайла КАК НомерТекущегоФайла,
	|	ДанныеИндикатораОбработки.НомерТекущейСтроки,
	|	ДанныеИндикатораОбработки.ВсегоСтрок,
	|	ДанныеИндикатораОбработки.ПутьКФайлу,
	|	ДанныеИндикатораОбработки.ОтправленоЗапросов КАК ОтправленоЗапросов,
	|	ДанныеИндикатораОбработки.ОбработкаЗавершена КАК ОбработкаЗавершена,
	|	ДанныеИндикатораОбработки.ДатаФайла,
	|	ДанныеИндикатораОбработки.ВсегоСтрокОбработано КАК ВсегоСтрокОбработано,
	|	ДанныеИндикатораОбработки.РазмерОбработанныхФайлов КАК РазмерОбработанныхФайлов
	|ИЗ
	|	РегистрСведений.ДанныеИндикатораОбработки КАК ДанныеИндикатораОбработки
	|ГДЕ
	|	ДанныеИндикатораОбработки.Сервис = &Сервис
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПотока
	|ИТОГИ
	|	МИНИМУМ(ВсегоФайлов),
	|	СУММА(НомерТекущегоФайла),
	|	СУММА(ОтправленоЗапросов),
	|	МИНИМУМ(ОбработкаЗавершена),
	|	СУММА(ВсегоСтрокОбработано),
	|	СУММА(РазмерОбработанныхФайлов)
	|ПО
	|	ОБЩИЕ";
	
	
	ОбщиеДанные = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ОбщиеДанные.Следующий() Цикл
		
		Если ОбщиеДанные.ВсегоФайлов = 0 Тогда
			Индикатор = 100;
		Иначе
			Индикатор = Окр(ОбщиеДанные.НомерТекущегоФайла/ОбщиеДанные.ВсегоФайлов*100);
		КонецЕсли;
		
		Если ОбщиеДанные.ОбработкаЗавершена Тогда
			ТекстИндикатора = "Обработка данных завершена. "+Символы.ПС+
			"Обработано файлов: "+Строка(ОбщиеДанные.ВсегоФайлов)+Символы.ПС+
			"Обработано количество строк: "+Строка(ОбщиеДанные.ВсегоСтрокОбработано)+Символы.ПС+
			"Обработан общий размер файлов (КБайт): "+Строка(ОбщиеДанные.РазмерОбработанныхФайлов/1000)+Символы.ПС+
			"Отправлено запросов по веб-сервису: "+Строка(ОбщиеДанные.ОтправленоЗапросов);
			ЗавершитьОбработку = ИСТИНА;
			Индикатор = 100;
		Иначе
			ТекстИндикатора = "";
			
			Выборка = ОбщиеДанные.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				Если Выборка.ОбработкаЗавершена Тогда
					ТекстИндикатора = ТекстИндикатора+?(ТекстИндикатора="","",Символы.ПС)+?(Выборка.НомерПотока=0,"",Строка(Выборка.НомерПотока)+".")+" Отправлено запросов по веб-сервису: "+ СокрЛП(Выборка.ОтправленоЗапросов)+" ("+Строка(Выборка.ДатаФайла)+")";
				Иначе	
					ТекстИндикатора = ТекстИндикатора+?(ТекстИндикатора="","",Символы.ПС)+?(Выборка.НомерПотока=0,"",Строка(Выборка.НомерПотока)+".")+" Обрабатывается файл: "+ Строка(Выборка.НомерТекущегоФайла)+" "+ СокрЛП(Выборка.ПутьКФайлу)+
					Символы.ПС+"обработка файла: "+СокрЛП(Выборка.НомерТекущейСтроки)+"/"+СокрЛП(Выборка.ВсегоСтрок)
					+?(Выборка.НомерПотока=0,"",Символы.ПС+" обработано в потоке: количество строк - "+Строка(Выборка.ВсегоСтрокОбработано)+"; размер файлов (Кбайт) -"+Строка(Цел(Выборка.РазмерОбработанныхФайлов/1000)));
				КонецЕсли;
			КонецЦикла;	
			
			
	
		КонецЕсли;	
		
	КонецЦикла;	
		
	
	СтруктураИндикатора = Новый Структура;
	СтруктураИндикатора.Вставить("ЗавершитьОбработку",ЗавершитьОбработку);
	СтруктураИндикатора.Вставить("ТекстИндикатора",ТекстИндикатора);
	СтруктураИндикатора.Вставить("Индикатор",Индикатор);

	Если ЗавершитьОбработку Тогда
		СтруктураПараметров = ТехнологическийЖурнал.ПолучитьНастройкиТЖ();
		
		Если  СтруктураПараметров.ОперативныйРежимПолученияИнформацииОЗапросах Тогда
			Если ИнформационнаяБазаФайловая() Тогда
				ТехнологическийЖурнал.ОтправитьДанныеЗапросов(СтруктураПараметров);
			Иначе
				МассивПараметров = Новый Массив();
				МассивПараметров.Добавить(СтруктураПараметров);
				
				ФоноваяОтправкаДанных = ФоновыеЗадания.Выполнить("ТехнологическийЖурнал.ОтправитьДанныеЗапросов",МассивПараметров,"ОтправитьДанныеЗапросов","Отправка таблицы запросов");
				ФоноваяОтправкаДанных.ОжидатьЗавершения();
				
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли;	

	
	Возврат  СтруктураИндикатора; 
КонецФункции 

&НаКлиенте
Процедура ПроверкаВебСервиса(Команда)
	
	Ошибка = "";
	
	ВызватьВебСервис(Ошибка);
	
	Если Ошибка = "" Тогда
		Предупреждение("Соединение с веб-сервисом успешно установленно!");
	Иначе
		Предупреждение("Не удалось соединиться с веб-сервисом!!!");
		Сообщить(Ошибка);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВызватьВебСервис(Ошибка)
	Ошибка = ТехнологическийЖурнал.ПроверкаВебСервиса();
КонецПроцедуры
